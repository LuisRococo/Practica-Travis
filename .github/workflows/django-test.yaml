name: Pytest sin docker

# Controls when the workflow will run
on:
  # Allows you to call this workflow within another workflow
  workflow_call:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Triggered based on the git event type
  push:
    branches: [main]
  pull_request:
    branches: [main]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Add in environment variables for the entire "build" job
    env:
      PSQL_USERNAME: luis_pena
      PSQL_PASS: root
      PSQL_HOST: localhost
      PSQL_DBNAME: luis_penadb
      PSQL_PORT: 5432
    services:
      postgres_main:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ env.PSQL_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.PSQL_PASS }}
          POSTGRES_DB: ${{ env.PSQL_DBNAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
    # If you want to test multiple python version(s)
    strategy:
      matrix:
        python-version: ["3.8"]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install requirements
        run: |
          pip install -r requirements.txt
      - name: Make migrations
        # Step specific environment variables
        run: |
          python manage.py makemigrations && python manage.py migrate
      - name: Run Pytest
        run: pytest
      - name: Test only book_genres
        run: cd ./tests/books_genres && pytest -rP test_book_genre.py 
