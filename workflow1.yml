# name: Deploying docker containers of django and sql

# on:
#     workflow_call:
#     workflow_dispatch:
#     push:
#        branches: [main]
#     pull_request:
#         branches: [main]
# jobs:
#   simple_build:
#     runs-on: ubuntu-latest
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - name: Checkout code
#         uses: actions/checkout@v3
#         # with:
#         #   ref: pytest # Checkout with pytest branch, si queremos una rama normal quitar el with
#       - name: Create docker network
#         run: |
#           docker network create -d bridge our-library-net
#       - name: Build django image
#         run: |
#           docker build -t my-django-image26:2.0.0 .
#       # - name: Run docker containers
#       #   run: |
#       #     docker-compose --env-file .env.stg up --build
#       - name: Run docker container postgres
#         run: |
#           docker-compose --env-file .env.stg up -d postgres_db26
#       - name: Verifying net
#         run: |
#           docker inspect -f "{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}" postgres26
#       - name: Run docker container web
#         run: |
#           docker-compose --env-file .env.stg up -d web26
          
name: Django sin Docker

name: Pytest con Django sin docker

on:
  workflow_call:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  simple_build:
    runs-on: ubuntu-latest
    env:
      PSQL_USERNAME: luis_pena
      PSQL_PASS: root
      PSQL_DBNAME: luis_penadb
      PSQL_HOST: localhost
      PSQL_PORT: 5432
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ env.PSQL_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.PSQL_PASS }}
          POSTGRES_DB: ${{ env.PSQL_DBNAME }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Make migrations
        run: python manage.py makemigrations
      - name: Run migrations
        run: python manage.py migrate
      - name: Run tests
        run: pytest